{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "SemanticMD API",
    "description": "The SemanticMD API is a collection of endpoints aimed at machine learning tasks involving medical images.",
    "termsOfService": "http://semantic.md/tos.html",
    "contact": {
      "name": "contact@semantic.md"
    }
  },
  "host": "api.semantic.md",
  "basePath": "/",
  "securityDefinitions":
    {
      "basicAuth":{
        "type": "basic",
        "description": "HTTP Basic Authentication. Works over `HTTPS`"
      }
    },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/project/": {
      "post": {
        "description": "Projects provide a private workspace for API functionality. Project functionality includes uploading and tagging images, training models, and classifying images.",
        "tags": [
          "Project"
        ],
        "operationId": "Project Create",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectCreateresponse"
            }
          }
        }
      }
    },
    "/project/{project_id}": {
      "delete": {
        "description": "",
        "tags": [
          "Project"
        ],
        "operationId": "Project Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": ID of the project in form of an alphanumeric string
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/tag/": {
      "get": {
        "description": "",
        "tags": [
          "Tag"
        ],
        "operationId": "List All Tags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": ID of the project in form of an alphanumeric string
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListAllTagsresponse"
            }
          }
        }
      }
    },
    "/tag/{tag_name}": {
      "get": {
        "description": "",
        "tags": [
          "Tag"
        ],
        "operationId": "Tag Details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "e.g. malignant"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": ID of the project in form of an alphanumeric string
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TagDetailsresponse"
            }
          }
        }
      },
      "post": {
        "description": "",
        "tags": [
          "Tag"
        ],
        "operationId": "Create/Update Tag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag_name",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "e.g. malignant"
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": ID of the project in form of an alphanumeric string
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/model/": {
      "get": {
        "description": "",
        "tags": [
          "Model"
        ],
        "operationId": "List All Models",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListAllModelsresponse"
              }
            }
          }
        }
      }
    },
    "/model/{model_id}": {
      "get": {
        "description": "",
        "tags": [
          "Model"
        ],
        "operationId": "Model Details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of the model in form of an alphanumeric string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelDetailsresponse"
            }
          }
        }
      },
      "post": {
        "description": "Classify an image and return the predictions, weights and activations for a particular model.",
        "tags": [
          "Model"
        ],
        "operationId": "Model Classify",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of the model in form of an alphanumeric string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModelClassifyresponse"
            }
          }
        }
      }
    },
    "/model/{model_id}/classify/{job_id}": {
      "get": {
        "description": "",
        "tags": [
          "Model"
        ],
        "operationId": "Image Classification Status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of the model in form of an alphanumeric string"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of the image classification job in form of an alphanumeric string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageClassificationStatusresponse"
            }
          }
        }
      }
    },
    "/search/": {
      "post": {
        "description": "Compare an unknown image against a set of known images and return a top k list of similar images.",
        "tags": [
          "Visual Search"
        ],
        "operationId": "Visual Search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VisualSearchresponse"
            }
          }
        }
      }
    },
    "/search/{job_id}": {
      "get": {
        "description": "",
        "tags": [
          "Visual Search"
        ],
        "operationId": "Visual Search Status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "id of the visual search job in form of an alphanumeric string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VisualSearchStatusresponse"
            }
          }
        }
      }
    },
    "/recognize/": {
      "post": {
        "description": "",
        "tags": [
          "Visual Recognition"
        ],
        "operationId": "Image Recognition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageRecognitionresponse"
            }
          }
        }
      }
    },
    "/recognize/{job_id}": {
      "get": {
        "description": "",
        "tags": [
          "Visual Recognition"
        ],
        "operationId": "Image Recognition Status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "id of the image recognition job"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageRecognitionStatusresponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProjectCreateresponse": {
      "title": "Project Create response",
      "type": "object",
      "properties": {
        "project_id": {
          "type": "string"
        }
      },
      "required": [
        "project_id"
      ]
    },
    "ListAllTagsresponse": {
      "title": "List All Tags response",
      "type": "object",
      "properties": {
        "all_tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "all_tags"
      ]
    },
    "TagDetailsresponse": {
      "title": "Tag Details response",
      "type": "object",
      "properties": {
        "tag_name": {
          "type": "string"
        },
        "tag_images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tag_name",
        "tag_images"
      ]
    },
    "ListAllModelsresponse": {
      "title": "List All Models response",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "status",
        "name",
        "id"
      ]
    },
    "ModelDetailsresponse": {
      "title": "Model Details response",
      "type": "object",
      "properties": {
        "model_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dataset_id": {
          "type": "string"
        }
      },
      "required": [
        "model_id",
        "status",
        "dataset_id"
      ]
    },
    "ModelClassifyresponse": {
      "title": "Model Classify response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "required": [
        "job_id",
        "status"
      ]
    },
    "ImageClassificationStatusresponse": {
      "title": "Image Classification Status response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "status": {
          "type": "string"
        }
      },
      "required": [
        "job_id",
        "result",
        "status"
      ]
    },
    "VisualSearchresponse": {
      "title": "Visual Search response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "required": [
        "job_id",
        "status"
      ]
    },
    "VisualSearchStatusresponse": {
      "title": "Visual Search Status response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "job_id",
        "status",
        "result"
      ]
    },
    "ImageRecognitionresponse": {
      "title": "Image Recognition response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "required": [
        "job_id",
        "status"
      ]
    },
    "ImageRecognitionStatusresponse": {
      "title": "Image Recognition Status response",
      "type": "object",
      "properties": {
        "job_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "object"
        }
      },
      "required": [
        "job_id",
        "status",
        "result"
      ]
    }
  }
}